import{get as e,set as t}from"react-hook-form";const s=(t,s,o)=>{if(t&&"reportValidity"in t){const r=e(o,s);t.setCustomValidity(r&&r.message||""),t.reportValidity()}},o=(e,t)=>{for(const o in t.fields){const r=t.fields[o];r&&r.ref&&"reportValidity"in r.ref?s(r.ref,o,e):r&&r.refs&&r.refs.forEach(t=>s(t,o,e))}},r=(s,r)=>{r.shouldUseNativeValidation&&o(s,r);const f={};for(const o in s){const n=e(r.fields,o),a=Object.assign(s[o]||{},{ref:n&&n.ref});if(i(r.names||Object.keys(s),o)){const s=Object.assign({},e(f,o));t(s,"root",a),t(f,o,s)}else t(f,o,a)}return f},i=(e,t)=>e.some(e=>e.match(`^${t}\\.\\d+`));export{r as toNestErrors,o as validateFieldsNatively};
//# sourceMappingURL=resolvers.mjs.map
